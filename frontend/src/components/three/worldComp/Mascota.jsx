/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useContext } from "react";
import { useCylinder } from '@react-three/cannon'
import { ProfileContext } from '../../../ProfileContext';
import { MascotaAzul } from "./Mascota/MascotaAzul";
import { MascotaLila } from "./Mascota/MascotaLila";
import { MascotaRosa } from "./Mascota/MascotaRosa";
import { MascotaVerde } from "./Mascota/MascotaVerde";

const posicionMascota = [-3.2, 0, -4];

export function Mascota({ PlayerApi, handleSelectSesion }) {

    const playerPosition = useRef([0, 0, 0]);


    //Se ejecuta al hacer click a la mascota
    const handleObjectClick = () => {
        
        const umbral = 3.2;

        //Obtenemos la posicion del jugador
        PlayerApi.position.subscribe((pos) => {
            playerPosition.current = pos;
        });

        //Calculamos la distancia entre el jugador y la mascota
        const distancia = Math.sqrt(
            Math.pow(playerPosition.current[0] - posicionMascota[0], 2) +
            Math.pow(playerPosition.current[1] - posicionMascota[1], 2) +
            Math.pow(playerPosition.current[2] - posicionMascota[2], 2)
        );

        if (distancia < umbral) {
            handleSelectSesion(true);
        }

    };


    const [macotaRef] = useCylinder(() => ({
        mass: 1,
        type: "Static",
        position: posicionMascota,
        rotation: [0, 0.5, 0],
        args: [0.4, 0.4, 2.39, 32]
    }));

    const { color } = useContext(ProfileContext);


    return (
        <group ref={macotaRef} dispose={null} scale={0.3}>

            <mesh visible={false} onClick={handleObjectClick}>
                <cylinderBufferGeometry args={[1.35, 1.35, 8, 32]} />
                <meshBasicMaterial />
            </mesh>

            {color === 'Rosa' ? (
                <MascotaRosa />
            ) : color === 'Azul' ? (
                <MascotaAzul />

            ) : color === 'Verde' ? (
                <MascotaVerde />

            ) : color === 'Lila' ? (
                <MascotaLila />
            ) : (
                <></>
            )}

        </group>
    );
}



